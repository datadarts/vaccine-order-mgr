version: '3.1'
services:
  zookeeper:
    image: strimzi/kafka:latest-kafka-2.6.0
    container_name: zookeeper
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
  kafka:
    image: strimzi/kafka:latest-kafka-2.6.0
    container_name: kafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  db2:
    container_name: db2
    build:
      context:
        ./db2image
    environment:
        LICENSE: accept
        DBNAME: TESTDB
        DB2INSTANCE: db2inst1
        TO_CREATE_SAMPLEDB: "false"
        DB2INST1_PASSWORD: db2inst1
        HADR_ENABLED: "false"
        STORAGE_DIR: /database
    image: ibmcase/db2orders
    ports:
        - 50000:50000
        - 55000:55000
    privileged: true
    volumes:
        - ./db2data:/database
  connect:
    image: ibmcase/cdc-connector
    container_name: cdc-connector
    build:
      context:
        ./cdc
    ports:
      - 8083:8083
      - 5006:5005
    links:
      - kafka
      - db2
    depends_on:
      - orderservice
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=src_connect_configs
      - OFFSET_STORAGE_TOPIC=src_connect_offsets
      - STATUS_STORAGE_TOPIC=src_connect_statuses
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - KAFKA_DEBUG=true
      - DEBUG_SUSPEND_FLAG=n
  orderservice:
    image: ibmcase/vaccineorderms
    container_name: vaccineorderms
    build:
      context:
        ../
      dockerfile:
        ./src/main/docker/Dockerfile.jvm
    ports:
      - 8080:8080
      - 5005:5005
    links:
      - db2
      - kafka
    depends_on:
      - db2
      - kafka
    environment:
      - DBUSER=db2inst1
      - DBPWD=db2inst1
      - SSLJDBCURL=jdbc:db2://db2:50000/TESTDB
      - QUARKUS_HIBERNATE_ORM_SQL_LOAD_SCRIPT=import.sql
      - QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION=update
      - KAFKA_SSL_TRUSTORE_LOCATION=
      - KAFKA_CERT_PATH=
      - KAFKA_CERT_PWD=
      - KAFKA_SSL_TRUSTORE_PASSWORD=
